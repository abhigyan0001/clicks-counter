{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","time","setTime","clicks","setclicks","useEffect","timer","setInterval","document","title","clearInterval","style","height","width","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8MA6BeA,MA1Bf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEeF,mBAAS,GAFxB,mBAENG,EAFM,KAEEC,EAFF,KAgBb,OAZAC,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBL,EAAQD,EAAK,KACZ,KAEH,OADAO,SAASC,MAAT,UAAoBR,GAAM,EAAE,IAAIA,EAAhC,WACO,kBAAMS,cAAcJ,MAC1B,CAACL,EAAMC,IAOR,qCACA,yBAAQS,MAAO,CAAEC,OAAO,MAAOC,MAAO,OAASC,QANjD,WACEV,EAAUD,EAAO,IAKyDY,SAAUd,GAAM,EAA1F,wBAAoHA,GAAM,EAAE,aAAa,MACzI,yCAAYE,KACZ,8CAAiBF,GAAM,EAAE,IAAIA,EAA7B,OACA,4CAAeA,EAAK,EAAL,sBAAsBA,GAAM,EAAE,IAAIA,EAAlC,KAA0CE,EAAO,GAAG,aCZxDa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAM1BZ,K","file":"static/js/main.97382e3f.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [time, setTime] = useState(30);\n  const [clicks, setclicks] = useState(0);\n  \n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTime(time-1);\n    }, 1000)\n    document.title = `${time<=0?\"0\":time}s left!`;\n    return () => clearInterval(timer);\n  }, [time, setTime]);\n\n  function incremeantClicks(){\n    setclicks(clicks+1);\n  }\n\n  return (\n    <>\n    <button style={{ height:\"7em\", width: \"8em\" }} onClick={incremeantClicks} disabled={time<=0?true:false}>Click here {time<=0?\"[Disabled]\":\"\"}</button>\n    <h2>Clicks:{clicks}</h2>\n    <h2>Time left : {time<=0?\"0\":time}s</h2>\n    <h2>your cps: {time>0?`Waiting for ${time<=0?\"0\":time}s`:clicks/30+\"cps\"}</h2>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}